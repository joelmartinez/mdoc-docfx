<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="All"
  ToolsVersion="12.0">
  
    <PropertyGroup>
        <MDOC_EXE>Packages/mdoc.5.5.0/tools/mdoc.exe</MDOC_EXE>
        <ECMA2YAML_EXE>Packages/Microsoft.DocAsCode.ECMA2Yaml.1.0.338/tools/ECMA2Yaml.exe</ECMA2YAML_EXE>
        <DOCFX_EXE>Packages/docfx.console.2.30.0/tools/docfx.exe</DOCFX_EXE>
        <Docs_Outpath>content</Docs_Outpath>
        <DocFx_Path>$([System.IO.Path]::Combine($(Docs_Outpath),'docfx.json'))</DocFx_Path>
    </PropertyGroup>

    <Target Name="restore">
        <Exec Command="nuget restore packages.docs.config -PackagesDirectory Packages" />
    </Target>
    
    <Target Name="All" DependsOnTargets="Build;Docs_Api;Docs_Publish"/>

    <Target Name="Build">
        <MSBuild 
            Projects="src/samplecode.csproj" 
            Properties="Configuration=Release;OutputPath=bin"/>
    </Target>
    
    <Target Name="Docs_Api" DependsOnTargets="restore;Build;Docs_Init">
        <Exec Command="$(MDOC_EXE) update src/bin/samplecode.dll -out docs --debug" />
        <Exec Command="$(ECMA2YAML_EXE) --source=docs --output=$(Docs_Outpath)/api" />
    </Target>
    <Target Name="Docs_Init" DependsOnTargets="restore">
        <Exec Command="$(DOCFX_EXE) init -q -o content" Condition="!Exists($(DocFx_Path))" />
    </Target>
    <Target Name="Docs_Publish" DependsOnTargets="Docs_Api">
        <Exec Command="$(DOCFX_EXE) $(DocFx_Path) -o out/site" />
    </Target>
    <Target Name="Docs_Serve" DependsOnTargets="Docs_Api">
        <Exec Command="$(DOCFX_EXE) $(DocFx_Path) -o out/site --serve" />
    </Target>
  </Project>